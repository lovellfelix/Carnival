"use strict";var ApplicationConfiguration=function(){var applicationModuleName="mean",applicationModuleVendorDependencies=["ngResource","ngAnimate","ui.router","ui.bootstrap","ui.utils","angularFileUpload","ui.gravatar","yaru22.angular-timeago","infinite-scroll","ngMaterial","dcbImgFallback"],registerModule=function(moduleName,dependencies){angular.module(moduleName,dependencies||[]),angular.module(applicationModuleName).requires.push(moduleName)};return{applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:applicationModuleVendorDependencies,registerModule:registerModule}}();
"use strict";angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider",function($locationProvider){$locationProvider.html5Mode(!0).hashPrefix("!")}]),angular.module(ApplicationConfiguration.applicationModuleName).run(["$rootScope","$state","Authentication",function($rootScope,$state,Authentication){$rootScope.$on("$stateChangeStart",function(event,toState,toParams,fromState,fromParams){if(toState.data&&toState.data.roles&&toState.data.roles.length>0){var allowed=!1;toState.data.roles.forEach(function(role){return void 0!==Authentication.user.roles&&-1!==Authentication.user.roles.indexOf(role)?(allowed=!0,!0):void 0}),allowed||(event.preventDefault(),$state.go("authentication.signin",{},{notify:!1}).then(function(){$rootScope.$broadcast("$stateChangeSuccess","authentication.signin",{},toState,toParams)}))}}),$rootScope.$on("$stateChangeSuccess",function(event,toState,toParams,fromState,fromParams){$state.previous={state:fromState,params:fromParams,href:$state.href(fromState,fromParams)}})}]),angular.element(document).ready(function(){"#_=_"===window.location.hash&&(window.location.hash="#!"),angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])});
"use strict";ApplicationConfiguration.registerModule("chat");
"use strict";ApplicationConfiguration.registerModule("core"),ApplicationConfiguration.registerModule("core.admin",["core"]),ApplicationConfiguration.registerModule("core.admin.routes",["ui.router"]);
"use strict";ApplicationConfiguration.registerModule("posts");
"use strict";ApplicationConfiguration.registerModule("theme");
"use strict";ApplicationConfiguration.registerModule("tweets");
"use strict";ApplicationConfiguration.registerModule("users",["core"]),ApplicationConfiguration.registerModule("users.admin",["core.admin"]),ApplicationConfiguration.registerModule("users.admin.routes",["core.admin.routes"]);
"use strict";ApplicationConfiguration.registerModule("videos");
"use strict";angular.module("chat").run(["Menus",function(Menus){Menus.addMenuItem("topbar",{title:"Chat",state:"chat",icon:"forum",position:4})}]);
"use strict";angular.module("chat").config(["$stateProvider",function($stateProvider){$stateProvider.state("chat",{url:"/chat",templateUrl:"modules/chat/views/chat.client.view.html",data:{roles:["user","admin"]}})}]);
"use strict";angular.module("chat").controller("ChatController",["$scope","$location","Authentication","Socket",function($scope,$location,Authentication,Socket){$scope.messages=[],Authentication.user||$location.path("/"),Socket.socket||Socket.connect(),Socket.on("chatMessage",function(message){$scope.messages.unshift(message)}),$scope.sendMessage=function(){var message={text:this.messageText};Socket.emit("chatMessage",message),this.messageText=""},$scope.$on("$destroy",function(){Socket.removeListener("chatMessage")})}]);
"use strict";angular.module("core.admin").run(["Menus",function(Menus){Menus.addMenuItem("topbar",{title:"Admin",state:"admin",icon:"settings",type:"dropdown",roles:["admin"],positon:10})}]);
"use strict";angular.module("core.admin.routes").config(["$stateProvider",function($stateProvider){$stateProvider.state("admin",{"abstract":!0,url:"/admin",template:"<ui-view/>",data:{roles:["admin"]}})}]);
"use strict";angular.module("core").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("not-found"),$stateProvider.state("home",{url:"/core",templateUrl:"modules/core/views/home.client.view.html"}).state("not-found",{url:"/not-found",templateUrl:"modules/core/views/404.client.view.html"})}]);
"use strict";angular.module("core").controller("HeaderController",["$scope","$state","Authentication","Menus",function($scope,$state,Authentication,Menus){$scope.$state=$state,$scope.authentication=Authentication,$scope.menu=Menus.getMenu("topbar"),$scope.isCollapsed=!1,$scope.toggleCollapsibleMenu=function(){$scope.isCollapsed=!$scope.isCollapsed},$scope.$on("$stateChangeSuccess",function(){$scope.isCollapsed=!1})}]);
"use strict";angular.module("core").controller("HomeController",["$scope","Authentication",function($scope,Authentication){$scope.authentication=Authentication}]);
"use strict";angular.module("core").service("Menus",[function(){this.defaultRoles=["*"],this.menus={};var shouldRender=function(user){if(!user)return this.isPublic;if(~this.roles.indexOf("*"))return!0;for(var userRoleIndex in user.roles)for(var roleIndex in this.roles)if(this.roles[roleIndex]===user.roles[userRoleIndex])return!0;return!1};this.validateMenuExistance=function(menuId){if(menuId&&menuId.length){if(this.menus[menuId])return!0;throw new Error("Menu does not exist")}throw new Error("MenuId was not provided")},this.getMenu=function(menuId){return this.validateMenuExistance(menuId),this.menus[menuId]},this.addMenu=function(menuId,options){return options=options||{},this.menus[menuId]={isPublic:null===options.isPublic||"undefined"==typeof options.isPublic?!0:options.isPublic,roles:options.roles||this.defaultRoles,items:options.items||[],shouldRender:shouldRender},this.menus[menuId]},this.removeMenu=function(menuId){this.validateMenuExistance(menuId),delete this.menus[menuId]},this.addMenuItem=function(menuId,options){if(options=options||{},this.validateMenuExistance(menuId),this.menus[menuId].items.push({title:options.title||"",state:options.state||"",icon:options.icon||"",type:options.type||"item","class":options["class"],isPublic:null===options.isPublic||"undefined"==typeof options.isPublic?this.menus[menuId].isPublic:options.isPublic,roles:null===options.roles||"undefined"==typeof options.roles?this.menus[menuId].roles:options.roles,position:options.position||0,items:[],shouldRender:shouldRender}),options.items)for(var i in options.items)this.addSubMenuItem(menuId,options.link,options.items[i]);return this.menus[menuId]},this.addSubMenuItem=function(menuId,parentItemState,options){options=options||{},this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].state===parentItemState&&this.menus[menuId].items[itemIndex].items.push({title:options.title||"",state:options.state||"",isPublic:null===options.isPublic||"undefined"==typeof options.isPublic?this.menus[menuId].items[itemIndex].isPublic:options.isPublic,roles:null===options.roles||"undefined"==typeof options.roles?this.menus[menuId].items[itemIndex].roles:options.roles,position:options.position||0,shouldRender:shouldRender});return this.menus[menuId]},this.removeMenuItem=function(menuId,menuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===menuItemURL&&this.menus[menuId].items.splice(itemIndex,1);return this.menus[menuId]},this.removeSubMenuItem=function(menuId,submenuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)for(var subitemIndex in this.menus[menuId].items[itemIndex].items)this.menus[menuId].items[itemIndex].items[subitemIndex].link===submenuItemURL&&this.menus[menuId].items[itemIndex].items.splice(subitemIndex,1);return this.menus[menuId]},this.addMenu("topbar",{isPublic:!1})}]);
"use strict";angular.module("core").service("Socket",["Authentication","$state","$timeout",function(Authentication,$state,$timeout){this.connect=function(){Authentication.user&&(this.socket=io())},this.connect(),this.on=function(eventName,callback){this.socket&&this.socket.on(eventName,function(data){$timeout(function(){callback(data)})})},this.emit=function(eventName,data){this.socket&&this.socket.emit(eventName,data)},this.removeListener=function(eventName){this.socket&&this.socket.removeListener(eventName)}}]);
"use strict";angular.module("posts").run(["Menus",function(Menus){Menus.addMenuItem("topbar",{title:"Stream",state:"stream",icon:"pulse",position:1,isPublic:!0}),Menus.addSubMenuItem("topbar","posts",{title:"List Posts",state:"posts.list"}),Menus.addSubMenuItem("topbar","posts",{title:"Create Post",state:"posts.create"})}]);
"use strict";angular.module("posts").config(["$stateProvider",function($stateProvider){$stateProvider.state("stream",{url:"/",templateUrl:"modules/posts/views/stream.client.view.html"}).state("posts",{"abstract":!0,url:"/posts",template:"<ui-view/>"}).state("posts.list",{url:"",templateUrl:"modules/posts/views/list-posts.client.view.html"}).state("posts.create",{url:"/create",templateUrl:"modules/posts/views/create-post.client.view.html"}).state("posts.view",{url:"/:postId",templateUrl:"modules/posts/views/view-post.client.view.html"}).state("posts.edit",{url:"/:postId/edit",templateUrl:"modules/posts/views/edit-post.client.view.html"})}]);
"use strict";angular.module("posts").controller("PostsController",["$scope","$state","$stateParams","$location","Authentication","Posts","$modal","FileUploader",function($scope,$state,$stateParams,$location,Authentication,Posts,$modal,FileUploader){$scope.authentication=Authentication,$scope.loading=!1,$scope.filteredPosts=[],$scope.uploader=new FileUploader({url:"api/posts"}),$scope.uploader.queueLimit=1,$scope.uploader.filters.push({name:"imageFilter",fn:function(item,options){var type="|"+item.type.slice(item.type.lastIndexOf("/")+1)+"|";return-1!=="|jpg|png|jpeg|".indexOf(type)}}),$scope.uploader.filters.push({name:"sizeFilter",fn:function(item,options){return item.size<=7048e3}}),$scope.uploader.onAfterAddingFile=function(fileItem){$scope.addingFileError=null},$scope.uploader.onWhenAddingFileFailed=function(item,filter,options){$scope.addingFileError="Das Bild muss jpg oder png sein und darf maximal 2 MB gross sein"},$scope.uploader.onSuccessItem=function(fileItem,response,status,headers){$scope.loading=!1,console.log(response),$scope.picture=response,$scope.uploader.clearQueue(),$location.path("/")},$scope.uploader.onErrorItem=function(fileItem,response,status,headers){$scope.loading=!1,$scope.uploader.clearQueue(),$scope.error=response.message},$scope.openUploader=function(){$modal.open({templateUrl:"modules/posts/views/create-post.client.view.html",scope:$scope})},$scope.startUpload=function(){$scope.error=null,$scope.uploader.queue.length<1?$scope.error="Bitte ein Bild "+decodeURI("ausw%C3%A4hlen"):($scope.uploader.queue[0].formData.push({name:$scope.name}),$scope.loading=!0,$scope.uploader.uploadAll(),$state.reload())},$scope.loadPosts=function(){if($scope.posts)if($scope.filteredPosts.length<$scope.posts.length){var last=$scope.filteredPosts.length-1,postLimit=4;$scope.posts.length-$scope.filteredPosts.length<postLimit&&(postLimit=$scope.posts.length-$scope.filteredPosts.length);for(var i=1;postLimit>=i;i++)$scope.filteredPosts.push($scope.posts[last+i])}else $scope.filteredPosts=$scope.posts},$scope.remove=function(post){if(post){post.$remove();for(var i in $scope.posts)$scope.posts[i]===post&&$scope.posts.splice(i,1)}else $scope.post.$remove(function(){$location.path("posts")})},$scope.update=function(){var post=$scope.post;post.$update(function(){$location.path("posts/"+post._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){Posts.query(function(data){$scope.posts=data,$scope.loadPosts()})},$scope.findOne=function(){$scope.post=Posts.get({postId:$stateParams.postId})}}]);
"use strict";angular.module("posts").directive("ngThumb",["$window",function($window){var helper={support:!(!$window.FileReader||!$window.CanvasRenderingContext2D),isFile:function(item){return angular.isObject(item)&&item instanceof $window.File},isImage:function(file){var type="|"+file.type.slice(file.type.lastIndexOf("/")+1)+"|";return-1!=="|jpg|png|jpeg|bmp|gif|".indexOf(type)}};return{restrict:"A",template:"<canvas/>",link:function(scope,element,attributes){function onLoadImage(){var width=params.width||this.width/this.height*params.height,height=params.height||this.height/this.width*params.width;canvas.attr({width:width,height:height}),canvas[0].getContext("2d").drawImage(this,0,0,width,height)}function onLoadFile(event){var img=new Image;img.onload=onLoadImage,img.src=event.target.result}if(helper.support){var params=scope.$eval(attributes.ngThumb);if(helper.isFile(params.file)&&helper.isImage(params.file)){var canvas=element.find("canvas"),reader=new FileReader;reader.onload=onLoadFile,reader.readAsDataURL(params.file)}}}}}]);
"use strict";angular.module("posts").factory("Posts",["$resource",function($resource){return $resource("api/posts/:postId",{postId:"@_id"},{update:{method:"PUT"}})}]);
"use strict";angular.module("theme").config(["gravatarServiceProvider",function(gravatarServiceProvider){gravatarServiceProvider.defaults={size:100,"default":"retro"},gravatarServiceProvider.secure=!0}]);
"use strict";angular.module("tweets").run(["Menus",function(Menus){Menus.addMenuItem("topbar",{title:"Tweets",state:"tweets.list",icon:"pound-box",type:"dropdown",position:2,isPublic:!0}),Menus.addSubMenuItem("topbar","tweets",{title:"List Tweets",state:"tweets.list"}),Menus.addSubMenuItem("topbar","tweets",{title:"Create Tweet",state:"tweets.create"})}]);
"use strict";angular.module("tweets").config(["$stateProvider",function($stateProvider){$stateProvider.state("tweets",{"abstract":!0,url:"/tweets",template:"<ui-view/>"}).state("tweets.list",{url:"",templateUrl:"modules/tweets/views/list-tweets.client.view.html"}).state("tweets.create",{url:"/create",templateUrl:"modules/tweets/views/create-tweet.client.view.html"}).state("tweets.view",{url:"/:tweetId",templateUrl:"modules/tweets/views/view-tweet.client.view.html"}).state("tweets.edit",{url:"/:tweetId/edit",templateUrl:"modules/tweets/views/edit-tweet.client.view.html"})}]);
"use strict";angular.module("tweets").controller("TweetsController",["$scope","$state","$stateParams","$location","Authentication","Tweets","Top","SendTweetFor","TweetInformations",function($scope,$state,$stateParams,$location,Authentication,Tweets,Top,SendTweetFor,TweetInformations){$scope.authentication=Authentication,$scope.create=function(){var tweet=new Tweets({id:this.id});tweet.$save(function(response){$location.path("tweets/"+response._id)},function(errorResponse){$scope.error=errorResponse.data.message}),this.name=""},$scope.remove=function(tweet){if(tweet){tweet.$remove();for(var i in $scope.tweets)$scope.tweets[i]===tweet&&$scope.tweets.splice(i,1)}else $scope.tweet.$remove(function(){$location.path("tweets")})},$scope.update=function(){var tweet=$scope.tweet;tweet.$update(function(){$location.path("tweets/"+tweet._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.tweets=Tweets.query()},$scope.findOne=function(){$scope.tweet=Tweets.get({tweetId:$stateParams.tweetId})},$scope.top=function(){$scope.data=30,$scope.total=0,$scope.knobOptions={width:100,height:100,fgColor:"#008ed6",displayInput:!1,readOnly:!0,angleOffset:0},$scope.topTo=Top.query(),$scope.topFrom=Top.query({of:"from"})},$scope.direMerci=function(){var sendTweetFor=new SendTweetFor({to:$scope.to,msg:$scope.msg});sendTweetFor.$save(function(response){$location.path("infos/"+response.to)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.me=function(){return null===Authentication.user?void $state.go("signin"):($scope.tweetInformations=TweetInformations.get(),$scope.topTo=Top.query({to:Authentication.user.username}),void($scope.tweets=Tweets.query({to:Authentication.user.username})))},$scope.info=function(){$scope.tweetInformations=TweetInformations.get({of:$stateParams.user}),$scope.topTo=Top.query({to:$stateParams.user}),$scope.tweets=Tweets.query({to:$stateParams.user})},$scope["goto"]=function(url){console.log(url)}}]);
"use strict";angular.module("tweets").factory("Tweets",["$resource",function($resource){return $resource("api/tweets/:tweetId",{tweetId:"@_id"},{update:{method:"PUT"}})}]),angular.module("tweets").factory("SendTweetFor",["$resource",function($resource){return $resource("api/sendTweetFor",{},{update:{method:"PUT"}})}]),angular.module("tweets").factory("Top",["$resource",function($resource){return $resource("api/getTop")}]),angular.module("tweets").factory("TweetInformations",["$resource","Authentication",function($resource,Authentication){return $resource("getInformations/:userName",{userName:Authentication.username},{update:{method:"PUT"}})}]);
"use strict";angular.module("users.admin").run(["Menus",function(Menus){Menus.addSubMenuItem("topbar","admin",{title:"Manage Users",state:"admin.users"})}]);
"use strict";angular.module("users.admin.routes").config(["$stateProvider",function($stateProvider){$stateProvider.state("admin.users",{url:"/users",templateUrl:"modules/users/views/admin/user-list.client.view.html",controller:"UserListController"}).state("admin.user",{url:"/users/:userId",templateUrl:"modules/users/views/admin/user.client.view.html",controller:"UserController",resolve:{userResolve:["$stateParams","Admin",function($stateParams,Admin){return Admin.get({userId:$stateParams.userId})}]}}).state("admin.user-edit",{url:"/users/:userId/edit",templateUrl:"modules/users/views/admin/user-edit.client.view.html",controller:"UserController",resolve:{userResolve:["$stateParams","Admin",function($stateParams,Admin){return Admin.get({userId:$stateParams.userId})}]}})}]);
"use strict";angular.module("users").config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push(["$q","$location","Authentication",function($q,$location,Authentication){return{responseError:function(rejection){switch(rejection.status){case 401:Authentication.user=null,$location.path("signin");break;case 403:}return $q.reject(rejection)}}}])}]);
"use strict";angular.module("users").config(["$stateProvider",function($stateProvider){$stateProvider.state("settings",{"abstract":!0,url:"/settings",templateUrl:"modules/users/views/settings/settings.client.view.html",data:{roles:["user","admin"]}}).state("settings.profile",{url:"/profile",templateUrl:"modules/users/views/settings/edit-profile.client.view.html"}).state("settings.password",{url:"/password",templateUrl:"modules/users/views/settings/change-password.client.view.html"}).state("settings.accounts",{url:"/accounts",templateUrl:"modules/users/views/settings/manage-social-accounts.client.view.html"}).state("settings.picture",{url:"/picture",templateUrl:"modules/users/views/settings/change-profile-picture.client.view.html"}).state("authentication",{"abstract":!0,url:"/authentication",templateUrl:"modules/users/views/authentication/authentication.client.view.html"}).state("authentication.signup",{url:"/signup",templateUrl:"modules/users/views/authentication/signup.client.view.html"}).state("authentication.signin",{url:"/signin?err",templateUrl:"modules/users/views/authentication/signin.client.view.html"}).state("password",{"abstract":!0,url:"/password",template:"<ui-view/>"}).state("password.forgot",{url:"/forgot",templateUrl:"modules/users/views/password/forgot-password.client.view.html"}).state("password.reset",{"abstract":!0,url:"/reset",template:"<ui-view/>"}).state("password.reset.invalid",{url:"/invalid",templateUrl:"modules/users/views/password/reset-password-invalid.client.view.html"}).state("password.reset.success",{url:"/success",templateUrl:"modules/users/views/password/reset-password-success.client.view.html"}).state("password.reset.form",{url:"/:token",templateUrl:"modules/users/views/password/reset-password.client.view.html"})}]);
"use strict";angular.module("users").controller("AuthenticationController",["$scope","$state","$http","$location","$window","Authentication",function($scope,$state,$http,$location,$window,Authentication){$scope.authentication=Authentication,$scope.error=$location.search().err,$scope.authentication.user&&$location.path("/"),$scope.signup=function(){$http.post("/api/auth/signup",$scope.credentials).success(function(response){$scope.authentication.user=response,$state.go($state.previous.state.name||"home",$state.previous.params)}).error(function(response){$scope.error=response.message})},$scope.signin=function(){$http.post("/api/auth/signin",$scope.credentials).success(function(response){$scope.authentication.user=response,$state.go($state.previous.state.name||"home",$state.previous.params)}).error(function(response){$scope.error=response.message})},$scope.callOauthProvider=function(url){var redirect_to;$state.previous&&(redirect_to=$state.previous.href),$window.location.href=url+(redirect_to?"?redirect_to="+encodeURIComponent(redirect_to):"")}}]);
"use strict";angular.module("users").controller("PasswordController",["$scope","$stateParams","$http","$location","Authentication",function($scope,$stateParams,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.askForPasswordReset=function(){$scope.success=$scope.error=null,$http.post("/api/auth/forgot",$scope.credentials).success(function(response){$scope.credentials=null,$scope.success=response.message}).error(function(response){$scope.credentials=null,$scope.error=response.message})},$scope.resetUserPassword=function(){$scope.success=$scope.error=null,$http.post("/api/auth/reset/"+$stateParams.token,$scope.passwordDetails).success(function(response){$scope.passwordDetails=null,Authentication.user=response,$location.path("/password/reset/success")}).error(function(response){$scope.error=response.message})}}]);
"use strict";angular.module("users").factory("Authentication",["$window",function($window){var auth={user:$window.user};return auth}]);
"use strict";angular.module("users").factory("Users",["$resource",function($resource){return $resource("api/users",{},{update:{method:"PUT"}})}]),angular.module("users.admin").factory("Admin",["$resource",function($resource){return $resource("api/users/:userId",{userId:"@_id"},{update:{method:"PUT"}})}]);
"use strict";angular.module("videos").run(["Menus",function(Menus){Menus.addMenuItem("topbar",{title:"Videos",state:"videos.slick",icon:"video",isPublic:!0,position:3})}]);
"use strict";angular.module("videos").config(["$stateProvider",function($stateProvider){$stateProvider.state("videos",{"abstract":!0,url:"/videos",template:"<ui-view/>"}).state("videos.slick",{url:"",templateUrl:"modules/videos/views/slick-videos.client.view.html"}).state("videos.list",{url:"/list",templateUrl:"modules/videos/views/list-videos.client.view.html"}).state("videos.create",{url:"/create",templateUrl:"modules/videos/views/create-video.client.view.html"}).state("videos.view",{url:"/:videoId",templateUrl:"modules/videos/views/view-video.client.view.html"}).state("videos.edit",{url:"/:videoId/edit",templateUrl:"modules/videos/views/edit-video.client.view.html"})}]);
"use strict";angular.module("videos").controller("VideosController",["$sce","$scope","$stateParams","$location","Authentication","Videos",function($sce,$scope,$stateParams,$location,Authentication,Videos){$scope.authentication=Authentication,$scope.videoPreview=!1,$scope.youTubeCode="",$scope.videoIframe={current:0,set:function(index){this.current=index}},$scope.cancel=function(){$scope.name="",$scope.description="",$scope.sourceImg="",$scope.source="",$scope.videoPreview=!1,$scope.youTubeCode=""},$scope.decodeYoutubeLink=function(){var youTubeCode=$scope.youTubeCode,youTubeId="";-1!==youTubeCode.search("www.youtube.com/watch\\?v")?youTubeId=youTubeCode.split("www.youtube.com/watch?v=")[1]:-1!==youTubeCode.search("www.youtube.com/watch\\?feature=player_detailpage&v=")?youTubeId=youTubeCode.split("www.youtube.com/watch?feature=player_detailpage&v=")[1]:-1!==youTubeCode.search("www.youtube.com/embed/")?(youTubeId=youTubeCode.split("www.youtube.com/embed/")[1],youTubeId=youTubeId.split("?")[0]):$scope.error="Falscher Youtube Code.",""!==youTubeId?($scope.source="https://www.youtube.com/embed/"+youTubeId,$scope.sourceImg="https://i.ytimg.com/vi/"+youTubeId+"/default.jpg",$scope.videoPreview=!0,$scope.error=""):$scope.error="Falscher Youtube Code."},$scope.create=function(){var video=new Videos({name:this.name,description:this.description,source:this.source,sourceImg:this.sourceImg});video.$save(function(response){$location.path("videos"),$scope.cancel()},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(video){if(video){video.$remove();for(var i in $scope.videos)$scope.videos[i]===video&&$scope.videos.splice(i,1)}else $scope.video.$remove(function(){$location.path("videos")})},$scope.update=function(){var video=$scope.video;video.$update(function(){$location.path("videos/"+video._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){Videos.query(function(queryResult){$scope.videos=queryResult})},$scope.findOne=function(){$scope.video=Videos.get({videoId:$stateParams.videoId})}}]);
"use strict";angular.module("videos").filter("trusted",["$sce",function($sce){return function(input){return $sce.trustAsResourceUrl(input)}}]);
"use strict";angular.module("videos").factory("Videos",["$resource",function($resource){return $resource("api/videos/:videoId",{videoId:"@_id"},{update:{method:"PUT"}})}]);
"use strict";angular.module("users.admin").controller("UserListController",["$scope","$filter","Admin",function($scope,$filter,Admin){Admin.query(function(data){$scope.users=data,$scope.buildPager()}),$scope.buildPager=function(){$scope.pagedItems=[],$scope.itemsPerPage=15,$scope.currentPage=1,$scope.figureOutItemsToDisplay()},$scope.figureOutItemsToDisplay=function(){$scope.filteredItems=$filter("filter")($scope.users,{$:$scope.search}),$scope.filterLength=$scope.filteredItems.length;var begin=($scope.currentPage-1)*$scope.itemsPerPage,end=begin+$scope.itemsPerPage;$scope.pagedItems=$scope.filteredItems.slice(begin,end)},$scope.pageChanged=function(){$scope.figureOutItemsToDisplay()}}]);
"use strict";angular.module("users.admin").controller("UserController",["$scope","$state","Authentication","userResolve",function($scope,$state,Authentication,userResolve){$scope.authentication=Authentication,$scope.user=userResolve,$scope.remove=function(user){confirm("Are you sure you want to delete this user?")&&(user?(user.$remove(),$scope.users.splice($scope.users.indexOf(user),1)):$scope.user.$remove(function(){$state.go("admin.users")}))},$scope.update=function(){var user=$scope.user;user.$update(function(){$state.go("admin.user",{userId:user._id})},function(errorResponse){$scope.error=errorResponse.data.message})}}]);
"use strict";angular.module("users").controller("ChangePasswordController",["$scope","$http","Authentication",function($scope,$http,Authentication){$scope.user=Authentication.user,$scope.changeUserPassword=function(){$scope.success=$scope.error=null,$http.post("/api/users/password",$scope.passwordDetails).success(function(response){$scope.success=!0,$scope.passwordDetails=null}).error(function(response){$scope.error=response.message})}}]);
"use strict";angular.module("users").controller("ChangeProfilePictureController",["$scope","$timeout","$window","Authentication","FileUploader",function($scope,$timeout,$window,Authentication,FileUploader){$scope.user=Authentication.user,$scope.imageURL=$scope.user.profileImageURL,$scope.uploader=new FileUploader({url:"api/users/picture"}),$scope.uploader.filters.push({name:"imageFilter",fn:function(item,options){var type="|"+item.type.slice(item.type.lastIndexOf("/")+1)+"|";return-1!=="|jpg|png|jpeg|bmp|gif|".indexOf(type)}}),$scope.uploader.onAfterAddingFile=function(fileItem){if($window.FileReader){var fileReader=new FileReader;fileReader.readAsDataURL(fileItem._file),fileReader.onload=function(fileReaderEvent){$timeout(function(){$scope.imageURL=fileReaderEvent.target.result},0)}}},$scope.uploader.onSuccessItem=function(fileItem,response,status,headers){$scope.success=!0,$scope.user=Authentication.user=response,$scope.cancelUpload()},$scope.uploader.onErrorItem=function(fileItem,response,status,headers){$scope.cancelUpload(),$scope.error=response.message},$scope.uploadProfilePicture=function(){$scope.success=$scope.error=null,$scope.uploader.uploadAll()},$scope.cancelUpload=function(){$scope.uploader.clearQueue(),$scope.imageURL=$scope.user.profileImageURL}}]);
"use strict";angular.module("users").controller("EditProfileController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.updateUserProfile=function(isValid){if(isValid){$scope.success=$scope.error=null;var user=new Users($scope.user);user.$update(function(response){$scope.success=!0,Authentication.user=response},function(response){$scope.error=response.data.message})}else $scope.submitted=!0}}]);
"use strict";angular.module("users").controller("SocialAccountsController",["$scope","$http","Authentication",function($scope,$http,Authentication){$scope.user=Authentication.user,$scope.hasConnectedAdditionalSocialAccounts=function(provider){for(var i in $scope.user.additionalProvidersData)return!0;return!1},$scope.isConnectedSocialAccount=function(provider){return $scope.user.provider===provider||$scope.user.additionalProvidersData&&$scope.user.additionalProvidersData[provider]},$scope.removeUserSocialAccount=function(provider){$scope.success=$scope.error=null,$http["delete"]("/api/users/accounts",{params:{provider:provider}}).success(function(response){$scope.success=!0,$scope.user=Authentication.user=response}).error(function(response){$scope.error=response.message})}}]);
"use strict";angular.module("users").controller("SettingsController",["$scope","Authentication",function($scope,Authentication){$scope.user=Authentication.user}]);